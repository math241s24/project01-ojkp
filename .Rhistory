co_portland_2018 <- read_csv("../data/air_pollutants//co/co portland 2018.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
co_portland_2017 <- read_csv("../data/air_pollutants//co/co portland 2017.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
# no2 data 2017-2023 portland-vancouver-hillsboro (or-wa)
no2_portland_2023 <- read_csv("../data/air_pollutants//no2/no2 portland 2023.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
no2_portland_2022 <- read_csv("../data/air_pollutants//no2/no2 portland 2022.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
no2_portland_2021 <- read_csv("../data/air_pollutants//no2/no2 portland 2021.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
no2_portland_2020 <- read_csv("../data/air_pollutants//no2/no2 portland 2020.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
no2_portland_2019 <- read_csv("../data/air_pollutants//no2/no2 portland 2019.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
no2_portland_2018 <- read_csv("../data/air_pollutants//no2/no2 portland 2018.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
no2_portland_2017 <- read_csv("../data/air_pollutants//no2/no2 portland 2017.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
# ozone data 2017-2023 portland-vancouver-hillsboro (or-wa)
ozone_portland_2023 <- read_csv("../data/air_pollutants//ozone/ozone portland 2023.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
ozone_portland_2022 <- read_csv("../data/air_pollutants//ozone/ozone portland 2022.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
ozone_portland_2021 <- read_csv("../data/air_pollutants//ozone/ozone portland 2021.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
ozone_portland_2020 <- read_csv("../data/air_pollutants//ozone/ozone portland 2020.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
ozone_portland_2019 <- read_csv("../data/air_pollutants//ozone/ozone portland 2019.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
ozone_portland_2018 <- read_csv("../data/air_pollutants//ozone/ozone portland 2018.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
ozone_portland_2017 <- read_csv("../data/air_pollutants//ozone/ozone portland 2017.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"), Source = col_skip(),
`Site ID` = col_skip(), POC = col_skip(),
UNITS = col_skip(), `Site Name` = col_skip(),
DAILY_OBS_COUNT = col_skip(), PERCENT_COMPLETE = col_skip(),
AQS_PARAMETER_CODE = col_skip(),
AQS_PARAMETER_DESC = col_skip(),
CBSA_CODE = col_skip(), STATE_CODE = col_skip(),
STATE = col_skip(), COUNTY_CODE = col_skip(),
COUNTY = col_skip(), SITE_LATITUDE = col_skip(),
SITE_LONGITUDE = col_skip()))
# merging the data from different years
pm25_portland <- bind_rows(pm25_portland_2017, pm25_portland_2018, pm25_portland_2019, pm25_portland_2020, pm25_portland_2021, pm25_portland_2022, pm25_portland_2023)
so2_portland <- bind_rows(so2_portland_2017, so2_portland_2018, so2_portland_2019, so2_portland_2020, so2_portland_2021, so2_portland_2022, so2_portland_2023)
co_portland <- bind_rows(co_portland_2017, co_portland_2018, co_portland_2019, co_portland_2020, co_portland_2021, co_portland_2022, co_portland_2023)
no2_portland <- bind_rows(no2_portland_2017, no2_portland_2018, no2_portland_2019, no2_portland_2020, no2_portland_2021, no2_portland_2022, no2_portland_2023)
ozone_portland <- bind_rows(ozone_portland_2017, ozone_portland_2018, ozone_portland_2019, ozone_portland_2020, ozone_portland_2021, ozone_portland_2022, ozone_portland_2023)
# average pm2.5 per month 2017-2023
pm25_portland_2023$month_year <- format(pm25_portland_2023$Date, "%Y-%m")
pm25_portland_2022$month_year <- format(pm25_portland_2022$Date, "%Y-%m")
pm25_portland_2021$month_year <- format(pm25_portland_2021$Date, "%Y-%m")
pm25_portland_2020$month_year <- format(pm25_portland_2020$Date, "%Y-%m")
pm25_portland_2019$month_year <- format(pm25_portland_2019$Date, "%Y-%m")
pm25_portland_2018$month_year <- format(pm25_portland_2018$Date, "%Y-%m")
pm25_portland_2017$month_year <- format(pm25_portland_2017$Date, "%Y-%m")
avg_pm25_2023 <- pm25_portland_2023 %>%
group_by(month_year) %>%
summarize(avg_pm2.5 = mean(`Daily Mean PM2.5 Concentration`))
avg_pm25_2022 <- pm25_portland_2022 %>%
group_by(month_year) %>%
summarize(avg_pm2.5 = mean(`Daily Mean PM2.5 Concentration`))
avg_pm25_2021 <- pm25_portland_2021 %>%
group_by(month_year) %>%
summarize(avg_pm2.5 = mean(`Daily Mean PM2.5 Concentration`))
avg_pm25_2020 <- pm25_portland_2020 %>%
group_by(month_year) %>%
summarize(avg_pm2.5 = mean(`Daily Mean PM2.5 Concentration`))
avg_pm25_2019 <- pm25_portland_2019 %>%
group_by(month_year) %>%
summarize(avg_pm2.5 = mean(`Daily Mean PM2.5 Concentration`))
avg_pm25_2018 <- pm25_portland_2018 %>%
group_by(month_year) %>%
summarize(avg_pm2.5 = mean(`Daily Mean PM2.5 Concentration`))
avg_pm25_2017 <- pm25_portland_2017 %>%
group_by(month_year) %>%
summarize(avg_pm2.5 = mean(`Daily Mean PM2.5 Concentration`))
avg_pm25 <- bind_rows(avg_pm25_2017, avg_pm25_2018, avg_pm25_2019, avg_pm25_2020, avg_pm25_2021, avg_pm25_2022, avg_pm25_2023)
rm(avg_pm25_2017, avg_pm25_2018, avg_pm25_2019, avg_pm25_2020, avg_pm25_2021, avg_pm25_2022, avg_pm25_2023)
# average so2 per month 2017-2023
so2_portland_2023$month_year <- format(so2_portland_2023$Date, "%Y-%m")
so2_portland_2022$month_year <- format(so2_portland_2022$Date, "%Y-%m")
so2_portland_2021$month_year <- format(so2_portland_2021$Date, "%Y-%m")
so2_portland_2020$month_year <- format(so2_portland_2020$Date, "%Y-%m")
so2_portland_2019$month_year <- format(so2_portland_2019$Date, "%Y-%m")
so2_portland_2018$month_year <- format(so2_portland_2018$Date, "%Y-%m")
so2_portland_2017$month_year <- format(so2_portland_2017$Date, "%Y-%m")
avg_so2_2023 <- so2_portland_2023 %>%
group_by(month_year) %>%
summarize(avg_so2 = mean(`Daily Max 1-hour SO2 Concentration`))
avg_so2_2022 <- so2_portland_2022 %>%
group_by(month_year) %>%
summarize(avg_so2 = mean(`Daily Max 1-hour SO2 Concentration`))
avg_so2_2021 <- so2_portland_2021 %>%
group_by(month_year) %>%
summarize(avg_so2 = mean(`Daily Max 1-hour SO2 Concentration`))
avg_so2_2020 <- so2_portland_2020 %>%
group_by(month_year) %>%
summarize(avg_so2 = mean(`Daily Max 1-hour SO2 Concentration`))
avg_so2_2019 <- so2_portland_2019 %>%
group_by(month_year) %>%
summarize(avg_so2 = mean(`Daily Max 1-hour SO2 Concentration`))
avg_so2_2018 <- so2_portland_2018 %>%
group_by(month_year) %>%
summarize(avg_so2 = mean(`Daily Max 1-hour SO2 Concentration`))
avg_so2_2017 <- so2_portland_2017 %>%
group_by(month_year) %>%
summarize(avg_so2 = mean(`Daily Max 1-hour SO2 Concentration`))
avg_so2 <- bind_rows(avg_so2_2017, avg_so2_2018, avg_so2_2019, avg_so2_2020, avg_so2_2021, avg_so2_2022, avg_so2_2023)
rm(avg_so2_2017, avg_so2_2018, avg_so2_2019, avg_so2_2020, avg_so2_2021, avg_so2_2022, avg_so2_2023)
# average co per month 2017-2023
co_portland_2023$month_year <- format(co_portland_2023$Date, "%Y-%m")
co_portland_2022$month_year <- format(co_portland_2022$Date, "%Y-%m")
co_portland_2021$month_year <- format(co_portland_2021$Date, "%Y-%m")
co_portland_2020$month_year <- format(co_portland_2020$Date, "%Y-%m")
co_portland_2019$month_year <- format(co_portland_2019$Date, "%Y-%m")
co_portland_2018$month_year <- format(co_portland_2018$Date, "%Y-%m")
co_portland_2017$month_year <- format(co_portland_2017$Date, "%Y-%m")
avg_co_2023 <- co_portland_2023 %>%
group_by(month_year) %>%
summarize(avg_co = mean(`Daily Max 8-hour CO Concentration`))
avg_co_2022 <- co_portland_2022 %>%
group_by(month_year) %>%
summarize(avg_co = mean(`Daily Max 8-hour CO Concentration`))
avg_co_2021 <- co_portland_2021 %>%
group_by(month_year) %>%
summarize(avg_co = mean(`Daily Max 8-hour CO Concentration`))
avg_co_2020 <- co_portland_2020 %>%
group_by(month_year) %>%
summarize(avg_co = mean(`Daily Max 8-hour CO Concentration`))
avg_co_2019 <- co_portland_2019 %>%
group_by(month_year) %>%
summarize(avg_co = mean(`Daily Max 8-hour CO Concentration`))
avg_co_2018 <- co_portland_2018 %>%
group_by(month_year) %>%
summarize(avg_co = mean(`Daily Max 8-hour CO Concentration`))
avg_co_2017 <- co_portland_2017 %>%
group_by(month_year) %>%
summarize(avg_co = mean(`Daily Max 8-hour CO Concentration`))
avg_co <- bind_rows(avg_co_2017, avg_co_2018, avg_co_2019, avg_co_2020, avg_co_2021, avg_co_2022, avg_co_2023)
rm(avg_co_2017, avg_co_2018, avg_co_2019, avg_co_2020, avg_co_2021, avg_co_2022, avg_co_2023)
# average no2 per month 2017-2023
no2_portland_2023$month_year <- format(no2_portland_2023$Date, "%Y-%m")
no2_portland_2022$month_year <- format(no2_portland_2022$Date, "%Y-%m")
no2_portland_2021$month_year <- format(no2_portland_2021$Date, "%Y-%m")
no2_portland_2020$month_year <- format(no2_portland_2020$Date, "%Y-%m")
no2_portland_2019$month_year <- format(no2_portland_2019$Date, "%Y-%m")
no2_portland_2018$month_year <- format(no2_portland_2018$Date, "%Y-%m")
no2_portland_2017$month_year <- format(no2_portland_2017$Date, "%Y-%m")
avg_no2_2023 <- no2_portland_2023 %>%
group_by(month_year) %>%
summarize(avg_no2 = mean(`Daily Max 1-hour NO2 Concentration`))
avg_no2_2022 <- no2_portland_2022 %>%
group_by(month_year) %>%
summarize(avg_no2 = mean(`Daily Max 1-hour NO2 Concentration`))
avg_no2_2021 <- no2_portland_2021 %>%
group_by(month_year) %>%
summarize(avg_no2 = mean(`Daily Max 1-hour NO2 Concentration`))
avg_no2_2020 <- no2_portland_2020 %>%
group_by(month_year) %>%
summarize(avg_no2 = mean(`Daily Max 1-hour NO2 Concentration`))
avg_no2_2019 <- no2_portland_2019 %>%
group_by(month_year) %>%
summarize(avg_no2 = mean(`Daily Max 1-hour NO2 Concentration`))
avg_no2_2018 <- no2_portland_2018 %>%
group_by(month_year) %>%
summarize(avg_no2 = mean(`Daily Max 1-hour NO2 Concentration`))
avg_no2_2017 <- no2_portland_2017 %>%
group_by(month_year) %>%
summarize(avg_no2 = mean(`Daily Max 1-hour NO2 Concentration`))
avg_no2 <- bind_rows(avg_no2_2017, avg_no2_2018, avg_no2_2019, avg_no2_2020, avg_no2_2021, avg_no2_2022, avg_no2_2023)
rm(avg_no2_2017, avg_no2_2018, avg_no2_2019, avg_no2_2020, avg_no2_2021, avg_no2_2022, avg_no2_2023)
# average ozone per month 2017-2023
ozone_portland_2023$month_year <- format(ozone_portland_2023$Date, "%Y-%m")
ozone_portland_2022$month_year <- format(ozone_portland_2022$Date, "%Y-%m")
ozone_portland_2021$month_year <- format(ozone_portland_2021$Date, "%Y-%m")
ozone_portland_2020$month_year <- format(ozone_portland_2020$Date, "%Y-%m")
ozone_portland_2019$month_year <- format(ozone_portland_2019$Date, "%Y-%m")
ozone_portland_2018$month_year <- format(ozone_portland_2018$Date, "%Y-%m")
ozone_portland_2017$month_year <- format(ozone_portland_2017$Date, "%Y-%m")
avg_ozone_2023 <- ozone_portland_2023 %>%
group_by(month_year) %>%
summarize(avg_ozone = mean(`Daily Max 8-hour Ozone Concentration`))
avg_ozone_2022 <- ozone_portland_2022 %>%
group_by(month_year) %>%
summarize(avg_ozone = mean(`Daily Max 8-hour Ozone Concentration`))
avg_ozone_2021 <- ozone_portland_2021 %>%
group_by(month_year) %>%
summarize(avg_ozone = mean(`Daily Max 8-hour Ozone Concentration`))
avg_ozone_2020 <- ozone_portland_2020 %>%
group_by(month_year) %>%
summarize(avg_ozone = mean(`Daily Max 8-hour Ozone Concentration`))
avg_ozone_2019 <- ozone_portland_2019 %>%
group_by(month_year) %>%
summarize(avg_ozone = mean(`Daily Max 8-hour Ozone Concentration`))
avg_ozone_2018 <- ozone_portland_2018 %>%
group_by(month_year) %>%
summarize(avg_ozone = mean(`Daily Max 8-hour Ozone Concentration`))
avg_ozone_2017 <- ozone_portland_2017 %>%
group_by(month_year) %>%
summarize(avg_ozone = mean(`Daily Max 8-hour Ozone Concentration`))
avg_ozone <- bind_rows(avg_ozone_2017, avg_ozone_2018, avg_ozone_2019, avg_ozone_2020, avg_ozone_2021, avg_ozone_2022, avg_ozone_2023)
rm(avg_ozone_2017, avg_ozone_2018, avg_ozone_2019, avg_ozone_2020, avg_ozone_2021, avg_ozone_2022, avg_ozone_2023)
# removing seperate year data
rm(pm25_portland_2017, pm25_portland_2018, pm25_portland_2019, pm25_portland_2020, pm25_portland_2021, pm25_portland_2022, pm25_portland_2023)
rm(so2_portland_2017, so2_portland_2018, so2_portland_2019, so2_portland_2020, so2_portland_2021, so2_portland_2022, so2_portland_2023)
rm(co_portland_2017, co_portland_2018, co_portland_2019, co_portland_2020, co_portland_2021, co_portland_2022, co_portland_2023)
rm(no2_portland_2017, no2_portland_2018, no2_portland_2019, no2_portland_2020, no2_portland_2021, no2_portland_2022, no2_portland_2023)
rm(ozone_portland_2017, ozone_portland_2018, ozone_portland_2019, ozone_portland_2020, ozone_portland_2021, ozone_portland_2022, ozone_portland_2023)
knitr::opts_knit$set(output.dir = "../knitted outputs")
knitr::opts_knit$set(output.dir = "../knitted outputs")
knit_with_parameters("~/Github/project01-ojkp/code/Question1.Rmd")
knitr::opts_knit$set("../knitted outputs")
unlink("code/Question1_cache", recursive = TRUE)
library(tidyverse)
library(lubridate)
library(dplyr)
library(readr)
library(reshape2)
library(viridis)
# This code uses relative paths to find your dataset. Please run R studio through the R project in the folder.
avgAll <- read_csv("../data/air_pollutants/avgAll.csv")
avgAll2020 <- read_csv("../data/air_pollutants/avgAll2020.csv")
avgAll$year <- as.character(avgAll$year)
avgAll2020$year <- as.character(avgAll2020$year)
#FIRST GRAPH
ggplot(avgAll,aes(x =month, y = avg_pm2.5, fill=year)) +
geom_col(width=.7, show.legend = FALSE)+
scale_fill_viridis_d() +
scale_x_continuous(breaks = c(1, 13, 25, 37, 49,61,73, 84), labels = c("1"="2017","13"="2018","25"="2019","37"="2020","49"="2021","61"="2022","73"="2023","84"="2024"))+
theme_linedraw()+
labs(title = "Concentration of Airborne Fine Particles(PM2.5) in Portland, OR",
subtitle="From 2017 to 2024",
x = "Year",
y = "Average PM2.5 Concentration(µg/m³)") +
guides(color = "none")+
theme(axis.title.y = element_text(size=10,margin=margin(r=20)),
axis.title.x = element_text(size=10,margin=margin(t=15)))+
geom_point(aes(x=39,y=40), show.legend = FALSE, color="#21918c", shape=6)+
annotate("segment", x = 39, xend = 39, y = 39, yend = 5.8, color = "#21918c", linewidth = .5, linetype="dashed") +
geom_rect(aes(xmin=27, xmax=37, ymin=38, ymax=44 ), fill="#21918c", alpha=0.008)+
annotate("text", x = 32, y = 41, label = "Quarantine Begins\n (March 2020)", size=2)+
geom_point(aes(x=54,y=40), show.legend = FALSE, color="#5ec962", shape=6)+
annotate("segment", x = 54, xend = 54, y = 39, yend = 4.3, color = "#5ec962", linewidth = .5, linetype="dashed") +
geom_rect(aes(xmin=56, xmax=66, ymin=38, ymax=44 ), fill="#5ec962", alpha=0.008)+
annotate("text", x = 61, y = 41, label = "Quarantine Ends\n (June 2021)", size=2)
#KIANNA's FIRST GRAPH
ggplot(avgAll,aes(x =month, y = avg_co, fill=year)) +
geom_col(width=.7, show.legend = FALSE)+
scale_fill_manual(values =c("#33302E", "#320a5e", "#781c6d", "#bc3754", "#ed6925","#fbb61a","#fcffa4"))+
scale_x_continuous(breaks = c(1, 13, 25, 37, 49,61,73, 84), labels = c("1"="2017","13"="2018","25"="2019","37"="2020","49"="2021","61"="2022","73"="2023","84"="2024"))+
theme_linedraw()+
labs(title = "Concentration of Carbon Monoxide(CO) in Portland, OR",
subtitle="From 2017 to 2024",
x = "Year",
y = "Average CO Concentration(ppbv)") +
guides(color = "none")+
theme(axis.title.y = element_text(size=10,margin=margin(r=20)),
axis.title.x = element_text(size=10,margin=margin(t=15)))+
theme(
panel.background = element_rect(fill = "black"),  # Background color
plot.background = element_rect(fill = "black"),  # Plot area color
text = element_text(color = "white"),
axis.text = element_text(color = "white"),        # Axis text color
axis.line = element_line(color = "white"),        # Axis line color
panel.grid.major = element_line(color = "white"), # Major grid line color
panel.grid.minor = element_line(color = "white"))  +
annotate("segment", x = 19, xend = 19, y = .75, yend = 0.3, color = "white", linewidth = .5, linetype="dashed") +
annotate("segment", x = 21, xend = 21, y = .75, yend = 0.4, color = "white", linewidth = .5, linetype="dashed") +
annotate("segment", x = 19, xend = 21, y = .75, yend = 0.75, color = "white", linewidth = .5) +
geom_rect(aes(xmin=10, xmax=20, ymin=.8, ymax=1 ), fill="white", alpha=0.05)+
annotate("text", x = 15, y = .9, label = "Regular Wildfire\n Season", size=2)+
geom_point(aes(x=20,y=.775), show.legend = FALSE, color="white", shape=6, size=.5)+
annotate("segment", x = 67, xend = 67, y = .75, yend = 0.1, color = "white", linewidth = .5, linetype="dashed") +
annotate("segment", x = 69, xend = 69, y = .75, yend = 0.2, color = "white", linewidth = .5, linetype="dashed") +
annotate("segment", x = 67, xend = 69, y = .75, yend = 0.75, color = "white", linewidth = .5) +
geom_rect(aes(xmin=68, xmax=78, ymin=.8, ymax=1 ), fill="white", alpha=0.05)+
annotate("text", x = 73, y = .9, label = "Regular Wildfire\n Season", size=2)+
geom_point(aes(x=68,y=.775), show.legend = FALSE, color="white", shape=6, size=.5)+
annotate("segment", x = 45.5, xend = 58, y = 1.75, yend = 2, color = "red", linewidth = .5) +
geom_rect(aes(xmin=55, xmax=65, ymin=2, ymax=2.2 ), fill="red", alpha=0.05)+
annotate("text", x = 60, y = 2.1, label = "Archie Creek Fire\n(September 2020)", size=2)+
geom_point(aes(x=45.5,y=1.75), show.legend = FALSE, color="red", size=.5)
avgAll2020_melted <- melt(avgAll2020, id.vars = c("year", "monthbyyear"))
avgAll2019 <- avgAll%>%
filter(year==2019)%>%
select(year,monthbyyear,avg_pm2.5,avg_so2,avg_ozone,avg_co,avg_no2)
avgAll2019_melted <- melt(avgAll2019, id.vars = c("year", "monthbyyear"))
avgAll2021 <- avgAll%>%
filter(year==2021)%>%
select(year,monthbyyear,avg_pm2.5,avg_so2,avg_ozone,avg_co,avg_no2)
avgAll2021_melted <- melt(avgAll2021, id.vars = c("year", "monthbyyear"))
avgAll2019_melted <- avgAll2019_melted %>%
mutate(variable = case_when(
variable == "avg_pm2.5" ~ "Particulate Matter(PM2.5)",
variable == "avg_so2" ~ "Sulfur Dioxide(SO2)",
variable == "avg_no2" ~ "Nitrogen Dioxide(NO2)",
variable == "avg_ozone" ~ "Ozone",
variable == "avg_co" ~ "Carbon Monoxide(CO)",
))
avgAll2020_melted <- avgAll2020_melted %>%
mutate(variable = case_when(
variable == "avg_pm2.5" ~ "Particulate Matter(PM2.5)",
variable == "avg_so2" ~ "Sulfur Dioxide(SO2)",
variable == "avg_no2" ~ "Nitrogen Dioxide(NO2)",
variable == "avg_ozone" ~ "Ozone",
variable == "avg_co" ~ "Carbon Monoxide(CO)",
))
avgAll2021_melted <- avgAll2021_melted %>%
mutate(variable = case_when(
variable == "avg_pm2.5" ~ "Particulate Matter(PM2.5)",
variable == "avg_so2" ~ "Sulfur Dioxide(SO2)",
variable == "avg_no2" ~ "Nitrogen Dioxide(NO2)",
variable == "avg_ozone" ~ "Ozone",
variable == "avg_co" ~ "Carbon Monoxide(CO)",
))
ggplot(avgAll2019_melted , aes(x = monthbyyear, y = value, fill = variable)) +
geom_col() +
facet_wrap(variable ~ ., scales = "free_y") +
geom_smooth()+
scale_x_continuous(breaks = c(1, 2, 3, 4,5,6,7,8,9,10,11,12), labels = c("1" = "Jan", "2" = "Feb","3" = "Mar", "4" = "Apr","5" = "May","6" = "Jun","7" = "Jul","8" = "Aug","9" = "Sep","10" = "Oct","11" = "Nov","12" = "Dec"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=5))+
scale_fill_viridis_d()+
theme_linedraw()+
theme(panel.grid = element_blank())+
labs(x="", title="Concentration Trends by Pollutant",fill="Pollutant",subtitle="For the Year 2019",y="Concentration by Pollutant")+
#REMOVES X-LABELS
theme(axis.text.x = element_blank(),
#CHANGE MY LEGEND BORDER COLOR AND LINE THICKNESS
legend.box.background = element_rect(color = "black", size = 1),
legend.box.margin = margin(6, 6, 6, 6),
#CHANGE THE POSITION OF THE LEGEND
legend.position = c(.85, .2) ,
legend.text = element_text(color = "black", size = 7),  # Legend text color and size
legend.title = element_text(color = "black"),           # Legend title color
legend.key.size = unit(0.4, "cm"))
ggplot(avgAll2020_melted , aes(x = monthbyyear, y = value, fill = variable)) +
geom_col() +
facet_wrap(variable ~ ., scales = "free_y") +
geom_smooth()+
scale_x_continuous(breaks = c(1, 2, 3, 4,5,6,7,8,9,10,11,12), labels = c("1" = "Jan", "2" = "Feb","3" = "Mar", "4" = "Apr","5" = "May","6" = "Jun","7" = "Jul","8" = "Aug","9" = "Sep","10" = "Oct","11" = "Nov","12" = "Dec"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=5))+
scale_fill_viridis_d()+
theme_linedraw()+
theme(panel.grid = element_blank())+
labs(x="", title="Concentration Trends by Pollutant",fill="Pollutant",subtitle="For the Year 2020",y="Concentration by Pollutant")+
#REMOVES X-LABELS
theme(axis.text.x = element_blank(),
#CHANGE MY LEGEND BORDER COLOR AND LINE THICKNESS
legend.box.background = element_rect(color = "black", size = 1),
legend.box.margin = margin(6, 6, 6, 6),
#CHANGE THE POSITION OF THE LEGEND
legend.position = c(.85, .2) ,
legend.text = element_text(color = "black", size = 7),  # Legend text color and size
legend.title = element_text(color = "black"),           # Legend title color
legend.key.size = unit(0.4, "cm"))
ggplot(avgAll2021_melted , aes(x = monthbyyear, y = value, fill = variable)) +
geom_col() +
facet_wrap(variable ~ ., scales = "free_y") +
geom_smooth()+
scale_x_continuous(breaks = c(1, 2, 3, 4,5,6,7,8,9,10,11,12), labels = c("1" = "Jan", "2" = "Feb","3" = "Mar", "4" = "Apr","5" = "May","6" = "Jun","7" = "Jul","8" = "Aug","9" = "Sep","10" = "Oct","11" = "Nov","12" = "Dec"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=5))+
scale_fill_viridis_d()+
theme_linedraw()+
theme(panel.grid = element_blank())+
labs(x="", title="Concentration Trends by Pollutant",fill="Pollutant",subtitle="For the Year 2021",y="Concentration by Pollutant")+
#REMOVES X-LABELS
theme(axis.text.x = element_blank(),
#CHANGE MY LEGEND BORDER COLOR AND LINE THICKNESS
legend.box.background = element_rect(color = "black", size = 1),
legend.box.margin = margin(6, 6, 6, 8),
#CHANGE THE POSITION OF THE LEGEND
legend.position = c(.85, .2),
legend.text = element_text(color = "black", size = 7),  # Legend text color and size
legend.title = element_text(color = "black"),           # Legend title color
legend.key.size = unit(0.4, "cm"))
